<Workspace Version="1.0.0.1180" X="-55.8519233381052" Y="86.3478776866909" zoom="1.78359936238281" Name="Springs.Mesh.ToPolySurface" Description="Converts a Dynamo mesh to a polysurface. Uses multithreading - optimized for 4 cores." ID="098af804-e737-4150-82b8-ef3bafda7248" Category="Springs.Geometry">
  <NamespaceResolutionMap />
  <Elements>
    <PythonNodeModels.PythonNode guid="774a37af-9038-419d-81a1-d74c0608d122" type="PythonNodeModels.PythonNode" nickname="Python Script" x="250" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false" inputcount="1">
      <Script>#Copyright(c) 2016, Dimitar Venkov
# @5devene, dimitar.ven@gmail.com
import clr
from System.Threading import Thread, ThreadStart

clr.AddReference('ProtoGeometry')
from Autodesk.DesignScript.Geometry import *

def tolist(obj1):
	if hasattr(obj1,'__iter__'): return obj1
	else: return [obj1]

def output1(l1):
	if len(l1) == 1: return l1[0]
	else: return l1

def chop1(l1, n):
	return [l1[x:x+n] for x in xrange(0, len(l1), n)]

def mesh2ps(topo, f_chop = chop1,
			f_ps1 = PolySurface.ByJoinedSurfaces):
	vp = topo.VertexPositions
	fi = topo.FaceIndices
	xr1 = xrange(len(fi) )
	ind = [(fi[i].A, fi[i].B, fi[i].C) for i in xr1]
	ptslist = [ map(vp.__getitem__, ind[i]) for i in xr1]
	len1 = int(round(len(ptslist) ) ) / 4 + 1
	ptslist = f_chop(ptslist, len1)
	surf = [None, None, None, None]

	def ps_generator(i, f_chop = chop1,
					 f_ps1 = PolySurface.ByJoinedSurfaces,
					 f_sf1 = Surface.ByPerimeterPoints):
		sflist = [f_sf1(pts) for pts in ptslist[i] ]
		while len(sflist) &gt; 10 :
			sflist = f_chop(sflist,10)
			sflist = [f_ps1(sf1) for sf1 in sflist]
		surf[i] = sflist
		return

	def threaded_ps0(): return ps_generator(0)
	def threaded_ps1(): return ps_generator(1)
	def threaded_ps2(): return ps_generator(2)
	def threaded_ps3(): return ps_generator(3)
	threads = (Thread(ThreadStart(threaded_ps0) ),
			   Thread(ThreadStart(threaded_ps1) ),
			   Thread(ThreadStart(threaded_ps2) ),
			   Thread(ThreadStart(threaded_ps3) ) )
	for t in threads: t.Start()
	for t in threads: t.Join()
	return f_ps1(surf[0] + surf[1] + surf[2] + surf[3])
	for t in threads: t.Finalize()

meshes = tolist(IN[0])
OUT = output1(map(mesh2ps,meshes) )</Script>
    </PythonNodeModels.PythonNode>
    <Dynamo.Graph.Nodes.CustomNodes.Symbol guid="78634f4b-14ef-479c-bc52-b6e49c04a6e3" type="Dynamo.Graph.Nodes.CustomNodes.Symbol" nickname="Input" x="102.224484744322" y="0" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="True" IsFrozen="false" isPinned="false">
      <Symbol value="mesh:var[]" />
    </Dynamo.Graph.Nodes.CustomNodes.Symbol>
    <Dynamo.Graph.Nodes.CustomNodes.Output guid="715d68da-de03-4f26-a687-f3f8bcf4baa1" type="Dynamo.Graph.Nodes.CustomNodes.Output" nickname="Output" x="392.402031599546" y="-1.19560800870553" isVisible="true" isUpstreamVisible="true" lacing="Disabled" isSelectedInput="False" IsFrozen="false" isPinned="false">
      <Symbol value="PolySurface" />
    </Dynamo.Graph.Nodes.CustomNodes.Output>
  </Elements>
  <Connectors>
    <Dynamo.Graph.Connectors.ConnectorModel start="774a37af-9038-419d-81a1-d74c0608d122" start_index="0" end="715d68da-de03-4f26-a687-f3f8bcf4baa1" end_index="0" portType="0" />
    <Dynamo.Graph.Connectors.ConnectorModel start="78634f4b-14ef-479c-bc52-b6e49c04a6e3" start_index="0" end="774a37af-9038-419d-81a1-d74c0608d122" end_index="0" portType="0" />
  </Connectors>
  <Notes />
  <Annotations />
  <Presets />
  <Cameras>
    <Camera Name="Background Preview" eyeX="-63277.4657463028" eyeY="66425.2174037088" eyeZ="60605.363168582" lookX="50350.317842026" lookY="-65378.1957765701" lookZ="-28965.149371282" upX="0.509494750752758" upY="0.809016994374945" upZ="-0.293098280049386" />
  </Cameras>
</Workspace>